-- Complete database migration script
-- This script creates the simplified assignment_plans table for prompt generation
-- and removes any existing subtask-related tables

-- First, drop any existing subtask tables if they exist
DROP TABLE IF EXISTS public.refinement_messages CASCADE;
DROP TABLE IF EXISTS public.sub_tasks CASCADE;

-- Create or replace assignment_plans table with new structure
DROP TABLE IF EXISTS public.assignment_plans CASCADE;

CREATE TABLE public.assignment_plans (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  assignment_id BIGINT NOT NULL REFERENCES public.assignments(id) ON DELETE CASCADE,
  original_instructions TEXT NOT NULL,
  generated_prompt TEXT,
  prompt_status TEXT NOT NULL DEFAULT 'pending' CHECK (prompt_status IN ('pending', 'generating', 'completed', 'failed')),
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for performance
CREATE INDEX IF NOT EXISTS idx_assignment_plans_assignment_id ON public.assignment_plans(assignment_id);
CREATE INDEX IF NOT EXISTS idx_assignment_plans_status ON public.assignment_plans(prompt_status);

-- Enable Row Level Security
ALTER TABLE public.assignment_plans ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist
DROP POLICY IF EXISTS "Users can access their own assignment plans" ON public.assignment_plans;
DROP POLICY IF EXISTS "Users can insert assignment plans for their assignments" ON public.assignment_plans;

-- RLS Policies for assignment_plans
CREATE POLICY "Users can access their own assignment plans" ON public.assignment_plans
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM public.assignments a
      WHERE a.id = assignment_plans.assignment_id 
      AND a.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can insert assignment plans for their assignments" ON public.assignment_plans
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM public.assignments a
      WHERE a.id = assignment_id 
      AND a.user_id = auth.uid()
    )
  );

-- Grant necessary permissions
GRANT ALL ON public.assignment_plans TO authenticated;
GRANT USAGE ON SEQUENCE public.assignment_plans_id_seq TO authenticated;

-- Clean up any sequences from dropped tables
DROP SEQUENCE IF EXISTS public.sub_tasks_id_seq CASCADE;
DROP SEQUENCE IF EXISTS public.refinement_messages_id_seq CASCADE;