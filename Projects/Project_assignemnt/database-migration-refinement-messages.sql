-- Create refinement_messages table for plan refinement chat history
-- Story 3.3: Conversational Plan Refinement

CREATE TABLE public.refinement_messages (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  plan_id BIGINT NOT NULL REFERENCES public.assignment_plans(id) ON DELETE CASCADE,
  message_type TEXT NOT NULL CHECK (message_type IN ('user', 'system')),
  content TEXT NOT NULL,
  timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  change_summary TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for performance
CREATE INDEX idx_refinement_messages_plan_id ON public.refinement_messages(plan_id);
CREATE INDEX idx_refinement_messages_created_at ON public.refinement_messages(created_at);

-- Add Row Level Security (RLS) policies
ALTER TABLE public.refinement_messages ENABLE ROW LEVEL SECURITY;

-- Policy: Users can only access refinement messages for their own assignment plans
CREATE POLICY "Users can access refinement messages for their own plans" ON public.refinement_messages
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM public.assignment_plans ap
      JOIN public.assignments a ON ap.assignment_id = a.id
      WHERE ap.id = refinement_messages.plan_id 
      AND a.user_id = auth.uid()
    )
  );

-- Policy: Users can insert refinement messages for their own plans
CREATE POLICY "Users can insert refinement messages for their own plans" ON public.refinement_messages
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM public.assignment_plans ap
      JOIN public.assignments a ON ap.assignment_id = a.id
      WHERE ap.id = plan_id 
      AND a.user_id = auth.uid()
    )
  );

-- Grant necessary permissions
GRANT ALL ON public.refinement_messages TO authenticated;
GRANT USAGE ON SEQUENCE public.refinement_messages_id_seq TO authenticated;